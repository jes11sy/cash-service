generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Cash transactions
model Cash {
  id             Int      @id @default(autoincrement())
  name           String   // "приход" или "расход"
  amount         Decimal  @db.Decimal(10, 2)
  city           String?  @default("Москва")
  note           String?
  receiptDoc     String?  @map("receipt_doc")
  paymentPurpose String?  @map("payment_purpose") // назначение платежа
  dateCreate     DateTime @default(now()) @map("date_create")
  nameCreate     String   @map("name_create")
  createdAt      DateTime @default(now()) @map("created_at")
  updatedAt      DateTime @updatedAt @map("updated_at")

  @@index([name, city])
  @@map("cash")
}

// Master handover (сдача мастеров)
model MasterHandover {
  id                Int       @id @default(autoincrement())
  masterId          Int
  period            String    // 'daily', 'weekly', 'monthly'
  periodStart       DateTime
  periodEnd         DateTime
  totalAmount       Int       // Общая сумма к сдаче
  totalOrders       Int       // Количество заказов
  status            String    // 'pending', 'submitted', 'approved', 'rejected'
  submittedDate     DateTime?
  approvedBy        Int?
  approvedDate      DateTime?
  note              String?
  createdAt         DateTime  @default(now())
  
  master            Master    @relation(fields: [masterId], references: [id])
  approver          Director? @relation("HandoverApprover", fields: [approvedBy], references: [id])
  
  @@map("master_handover")
}

// Related models
model Order {
  id                    Int       @id @default(autoincrement())
  rk                    String
  city                  String
  avitoName             String?
  phone                 String
  typeOrder             String
  clientName            String
  address               String
  dateMeeting           String
  typeEquipment         String
  problem               String
  callRecord            String?
  statusOrder           String
  masterId              Int?
  result                Int?
  expenditure           Int?
  clean                 Int?
  masterChange          Int?
  bsoDoc                String?
  expenditureDoc        String?
  operatorNameId        Int
  createDate            DateTime  @default(now())
  closingData           String?
  avitoChatId           String?
  callId                String?
  prepayment            Int?
  dateClosmod           String?
  comment               String?
  cashSubmissionStatus  String?
  cashSubmissionDate    DateTime?
  cashSubmissionAmount  Int?
  cashReceiptDoc        String?
  cashApprovedBy        Int?
  cashApprovedDate      DateTime?
  directorId            Int?
  callcentreAdminId     Int?
  callcentreOperatorId  Int?
  
  master                Master?              @relation(fields: [masterId], references: [id])
  director              Director?            @relation(fields: [directorId], references: [id])
  cash                  Cash?
  
  @@map("order")
}

model Master {
  id             Int       @id @default(autoincrement())
  cities         String[]
  name           String
  login          String?   @unique
  password       String?
  passportDoc    String?   @map("passport_doc")
  contractDoc    String?   @map("contract_doc")
  statusWork     String    @map("status_work")
  dateCreate     DateTime  @default(now()) @map("date_create")
  note           String?
  tgId           String?   @map("tg_id")
  chatId         String?   @map("chat_id")
  createdAt      DateTime  @default(now()) @map("created_at")
  updatedAt      DateTime  @updatedAt @map("updated_at")
  
  orders         Order[]
  cashSubmissions Cash[]   @relation("CashSubmitter")
  handovers      MasterHandover[]
  
  @@map("master")
}

model Director {
  id             Int       @id @default(autoincrement())
  cities         String[]
  name           String
  login          String    @unique
  password       String
  contractDoc    String?   @map("contract_doc")
  passportDoc    String?   @map("passport_doc")
  dateCreate     DateTime  @default(now()) @map("date_create")
  note           String?
  tgId           String?   @map("tg_id")
  createdAt      DateTime  @default(now()) @map("created_at")
  updatedAt      DateTime  @updatedAt @map("updated_at")
  
  orders         Order[]
  cashApprovals  Cash[]    @relation("CashApprover")
  handoverApprovals MasterHandover[] @relation("HandoverApprover")
  
  @@map("director")
}




